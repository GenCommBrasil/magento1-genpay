<?php
/**
 ************************************************************************
 * Copyright [2018] [RakutenConnector]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ************************************************************************
 */
$helper = Mage::helper('rakutenlogistics/batch');
?>

<div id="rakutenpay-module">
    <div id="rakutenpay-module-content">
        <div class="wrapper">
            <div id="rakutenpay-module-contents">
                <h2 class="title"><?php echo $helper->__('Gerar Batch'); ?></h2>

                <div class="rakutenpay-search-tools">
                    <form action="javascript:void(0)" method="post">
                        <input type="hidden" name="form_key"
                               value="<?php echo Mage::getSingleton('core/session')->getFormKey(); ?>"/>
                        <button id="batch-search-button"><?php echo $helper->__('Pesquisar'); ?></button>
                        <select class="rakutenlogistics-field" name="rakutenlogistics-days" id="rakutenlogistics-refund-days-input">
                            <option value='5'>5</option>
                            <option value='10'>10</option>
                            <option value='15'>15</option>
                            <option value='20'>20</option>
                            <option value='25'>25</option>
                            <option value='30'>30</option>
                        </select>
                        <label><?php echo $helper->__('últimos dias'); ?></label>
                        <button id="batch-generate-button"><?php echo $helper->__('Gerar Batch'); ?></button>
                    </form>
                </div>

                <table id="batch-table" class="rakutenpay-table">
                    <thead>
                    <tr>
                        <th width="4%"><input type="checkbox" name="batch-select-all" id="batch-select-all" /></th>
                        <th width="16%"><?php echo $helper->__('Order ID'); ?></th>
                        <th width="30%"><?php echo $helper->__('Billing Name'); ?></th>
                        <th width="25%"><?php echo $helper->__('Date'); ?></th>
                        <th width="25%"><?php echo $helper->__('Status'); ?></th>
                    </tr>
                    </thead>
                </table>

                <?php
                $noTransaction = 'Nenhum resultado.';
                $batchSuccess = $helper->__("Transação estornada com sucesso!");
                $batchError = $helper->__("Não foi possível executar esta ação.");
                ?>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    jQuery(document).ready(function () {
        PageBatch.init();
    });
    var PageBatch = new function () {
        var requestTransactions = function () {
            // show loading modal
            Modal.showLoading('<?php echo $helper->__('Aguarde...');?>');
            jQuery.ajax({
                url: "<?php echo Mage::getSingleton('adminhtml/url')->getUrl('rakutenlogistics/adminhtml_batch/doPost'); ?>",
                type: "POST",
                data: {
                    form_key: "<?php echo Mage::getSingleton('core/session')->getFormKey();?>",
                    days: jQuery('#rakutenlogistics-refund-days-input').find(":selected").text()
                },
                success: function (xhrResult) {
                    xhrResult = JSON.parse(xhrResult);
                    if (xhrResult.status == false && xhrResult.err == "[HTTP 401] - UNAUTHORIZED") {
                        Modal.message('error', "Não foi possível realizar a consulta.");
                    } else {
                        // Ajax result handler and populates dataTable
                        if (xhrResult.status == false) {
                            jQuery('#batch-table').dataTable().fnClearTable(true);
                            Modal.message('alert', "Sem resultados para o período solicitado.");
                        } else {
                            jQuery('#batch-table').dataTable().fnClearTable(true);
                            jQuery.each(xhrResult, function (key, item) {
                                jQuery('#batch-table').dataTable().fnAddData([
                                    '<input type="checkbox" name="batch" class="batch" value="' + item.orderId + '" />',
                                    item.incrementId,
                                    item.billingName,
                                    item.createdAt,
                                    item.status
                                ]);
                            });
                            jQuery('#batch-table').dataTable()._fnInitComplete();
                            //After reassembling the table removes the modal of loading
                            Modal.hideLoading();
                        }
                    }
                },
                error: function (xhrErr) {
                    console.log(xhrErr);
                }
            });
        };
        var doBatch = function (data) {
            Modal.showLoading('<?php echo $helper->__('Aguarde...');?>');
            jQuery.ajax({
                url: "<?php echo Mage::getSingleton('adminhtml/url')->getUrl('rakutenlogistics/adminhtml_batch/doBatch'); ?>",
                type: "POST",
                data: {
                    form_key: "<?php echo Mage::getSingleton('core/session')->getFormKey();?>",
                    batch: data,
                    days: jQuery('#rakutenpay-batch-days-input').find(":selected").text()
                },
                success: function (xhrResult) {
                    xhrResult = JSON.parse(xhrResult);
                    if (xhrResult.status == false && xhrResult.err == true) {
                        jQuery('#batch-table').dataTable().fnClearTable(true);
                        Modal.message('error', 'Não foi possível executar esta ação.');
                    } else {
                        jQuery('#batch-table').dataTable().fnClearTable(true);
                        jQuery.each(xhrResult, function (key, item) {
                            jQuery('#batch-table').dataTable().fnAddData([
                                '<input type="checkbox" name="batch" class="batch" value="' + item.orderId + '" />',
                                item.incrementId,
                                item.billingName,
                                item.createdAt,
                                item.status
                            ]);
                        });
                        jQuery('#batch-table').dataTable()._fnInitComplete();
                        //After reassembling the table removes the modal of loading
                        Modal.hideLoading();
                    }
                },
                error: function (xhrErr) {
                    console.log(xhrErr);
                }
            });
        };
        var prepareTable = function () {
            var flow = 0;
            var totalRows = 0;
            var page = 0;
            var currentPage = 0;
            var oTable;
            jQuery.fn.dataTableExt.oApi.fnStandingRedraw = function (oSettings) {
                //redraw to account for filtering and sorting
                // concept here is that (for client side) there is a row got inserted at the end (for an add)
                // or when a record was modified it could be in the middle of the table
                // that is probably not supposed to be there - due to filtering / sorting
                // so we need to re process filtering and sorting
                // BUT - if it is server side - then this should be handled by the server - so skip this step
                if (oSettings.oFeatures.bServerSide === false) {
                    var before = oSettings._iDisplayStart;
                    oSettings.oApi._fnReDraw(oSettings);
                    //iDisplayStart has been reset to zero - so lets change it back
                    oSettings._iDisplayStart = before;
                    oSettings.oApi._fnCalculateEnd(oSettings);
                }
                //draw the 'current' page
                oSettings.oApi._fnDraw(oSettings);
            };
            // Initiates the creation of the table dataTable
            jQuery('#batch-table').dataTable({
                "info": false,
                "lengthChange": false,
                "searching": false,
                "bStateSave": true,
                "pageLength": 10,
                "aaSorting": [[0, "desc"]],
                "aoColumnDefs": [
                    {'bSortable': false, 'aTargets': [0]},
                    {"sClass": "tabela", 'aTargets': [1, 2, 3, 4]}
                ],
                // Creates paging and notifies when there is no record
                "oLanguage": {
                    "sEmptyTable": "<?php echo $helper->__($noTransaction); ?>",
                    "oPaginate": {
                        "sNext": '<?php echo $helper->__('Próximo');?>',
                        "sLast": '<?php echo $helper->__('Último');?>',
                        "sFirst": '<?php echo $helper->__('Primeiro');?>',
                        "sPrevious": '<?php echo $helper->__('Anterior');?>'
                    }
                }
            });
        };
        this.init = function () {
            prepareTable();
            jQuery('#batch-search-button').click(function () {
                requestTransactions();
            });
            jQuery('#batch-select-all').click(function () {
                if(jQuery(this).is(':checked')) {
                    jQuery('.batch').prop('checked', true);
                } else {
                    jQuery('.batch').prop('checked', false);
                }
            });
            jQuery('#batch-generate-button').click(function () {
                if (jQuery("input:checkbox[name=batch]:checked").length > 0) {
                    var data = [];
                    jQuery("input:checkbox[name=batch]:checked").each(function() {
                        data.push(jQuery(this).val());
                    });
                    doBatch(data);
                }
            });
        };
    };
</script>
<script type="text/javascript"
        src="<?php echo $this->getSkinUrl('rakuten/rakutenpay/js/rakutenpay-module.js'); ?>"></script>
